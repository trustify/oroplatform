{% extends 'OroUIBundle:actions:update.html.twig' %}
{% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}

{% set entityId = form.vars.value.id %}
{% oro_title_set({params : { "%role%": form.vars.value.label } }) %}
{% set gridName = 'role-users-grid' %}
{% set formAction = entityId ? path('oro_user_role_update', { 'id': entityId}) : path('oro_user_role_create') %}

{% block navButtons %}
    {% if entityId and resource_granted('DELETE', form.vars.value) %}
        {{ UI.deleteButton({
                'dataUrl': path('oro_api_delete_role', {'id': entityId}),
                'dataRedirect': path('oro_user_role_index'),
                'aCss': 'no-hash remove-button',
                'dataId': entityId,
                'id': 'btn-remove-role',
                'entity_label': 'oro.user.role.entity_label'|trans,
                'disabled': not allow_delete
            })
        }}
        {{ UI.buttonSeparator() }}
    {% endif %}
    {% if entityId and resource_granted('CREATE', form.vars.value)%}
        {{ UI.button({
            'iCss': 'icon-copy',
            'label': 'oro.user.role.clone'|trans,
            'title': 'oro.user.role.clone'|trans,
            'path': path('oro_user_role_clone', {'id': entityId}),
        }) }}
    {% endif %}
    {{ UI.buttonSeparator() }}
    {{ UI.cancelButton(path('oro_user_role_index')) }}
    {% set html = UI.buttonType({'type': 'button', 'class': 'btn-success role-submit', 'label': 'Save and Close'|trans}) %}
    {% if form.vars.value.id or resource_granted('oro_user_role_update') %}
        {# button attribute 'action' is avoided because of there is unacceptable submit binding on .action-button in init-layout.js #}
        {% set html = html ~ UI.buttonType({
            'type': 'button',
            'class': 'btn-success main-group role-submit',
            'label': 'Save'|trans,
            'data': {
                'action': 'save_and_stay'
            }
        }) %}
    {% endif %}
    {{ UI.dropdownSaveButton({'html': html}) }}
    {% set fields = [] %}
    {% for name, child in form %}
        {% if name not in ['appendUsers', 'removeUsers', 'entity', 'privileges', 'action'] %}
            {% set fields = fields|merge({(name): '#' ~ child.vars.id}) %}
        {% endif %}
    {% endfor %}
    {% set options = {
        elSelector: '.btn-success.role-submit',
        formName: form.vars.name,
        formSelector: '#' ~ form.vars.id,
        privilegesSelector: '#' ~ form.privileges.vars.id,
        appendUsersSelector: '#roleAppendUsers',
        removeUsersSelector: '#roleRemoveUsers',
        fields : fields
    } %}
    <div data-page-component-module="orouser/js/views/role-view"
         data-page-component-options="{{ options|json_encode }}">
    </div>
{% endblock navButtons %}

{% block pageHeader %}
    {% if entityId %}
        {% set breadcrumbs = {
            'entity':      form.vars.value,
            'indexPath':   path('oro_user_role_index'),
            'indexLabel': 'oro.user.role.entity_plural_label'|trans,
            'entityTitle': form.vars.value.label
        }
        %}
        {{ parent() }}
    {% else %}
        {% set title = 'oro.ui.create_entity'|trans({'%entityName%': 'oro.user.role.entity_label'|trans}) %}
        {% include 'OroUIBundle::page_title_block.html.twig' with { title: title } %}
    {% endif %}
{% endblock pageHeader %}

{% block content_data %}
    {% set id = 'role-profile' %}

    {% set dataBlocks = [{
        'title': 'General'|trans,
        'class': 'active',
        'subblocks': [
            {
                'title': '',
                'data': [
                    form_widget(form.appendUsers, {'id': 'roleAppendUsers'}),
                    form_widget(form.removeUsers, {'id': 'roleRemoveUsers'}),
                    form_row(form.label)
                ]
            }
        ]
    }] %}

    {% set additionalData = [] %}
    {% for child in form.children if child.vars.extra_field is defined and child.vars.extra_field %}
        {% set additionalData = additionalData|merge([form_row(child)]) %}
    {% endfor %}
    {% if additionalData is not empty %}
        {% set dataBlocks = dataBlocks|merge([{
                'title': 'Additional'|trans,
                'subblocks': [{
                    'title': '',
                    'useSpan': false,
                    'data' : additionalData
                }]
            }]
        ) %}
    {% endif %}

    {% for privilegeBlock, privilegeConfig in  privilegesConfig %}
        {% if privilegeBlock != 'field' %} {# do not show field controls here #}
        {% set dataBlocks = dataBlocks|merge([{
            'title': privilegeConfig.label|trans,
            'subblocks': [
                {
                    'title': '',
                    'useSpan': false,
                    'data': [
                        form_widget(form.children[privilegeBlock])
                    ]
                }
            ]
        }]) %}
        {% endif %}
    {% endfor %}

    {% set dataBlocks = dataBlocks|merge([{
        'title' : 'oro.user.entity_plural_label'|trans,
        'subblocks':
        [
            {
                'title' : null,
                'useSpan': false,
                'data' : [dataGrid.renderGrid(gridName, {role_id: entityId}, { cssClass: 'inner-grid' })]
            }
        ]
    }]) %}

    {% set data = {
        'formErrors': form_errors(form)? form_errors(form) : null,
        'dataBlocks': dataBlocks,
    } %}
    {{ parent() }}
{% endblock content_data %}
